{"version":3,"sources":["components/Navigation/index.jsx","pages/AjaxDemo/index.jsx","redux/type.js","redux/reducer.js","redux/store.js","pages/ReduxDemo/index.js","pages/HomePage/index.jsx","pages/EchartDemo/index.jsx","pages/RouterDemo/index.jsx","pages/NotFound404/index.jsx","Layout/page.jsx","components/SearchInput/index.jsx","pages/Explorer/tableRender.jsx","pages/Explorer/events.jsx","pages/Explorer/group.jsx","pages/Explorer/request.jsx","pages/Explorer/address.jsx","pages/Explorer/search.jsx","redux/action.js","pages/Explorer/searchContainer.jsx","pages/Explorer/index.jsx","util/web3.js","pages/NodeList/index.jsx","pages/NodeDetail/index.jsx","pages/MyAccount/activities.jsx","util/const.js","pages/MyAccount/myAccount.jsx","pages/MyAccount/myAccountContainer.jsx","pages/MyAccount/index.jsx","components/Footer/index.jsx","Layout/index.jsx","App.js","serviceWorker.js","index.tsx","test.module.css","pages/NotFound404/style.module.scss","pages/HomePage/logo.svg"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","activeClassName","Component","AjaxDemo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDatafromAjax","bind","assertThisInitialized","state","text","code","message","_this2","axios","get","then","data","response","body","setState","type","METAMASK_ADDRESS_CHANGE","EXPLORER_SEARCH_RESPONSE","EXPLORER_SEARCH_REQUEST","globalState","loadingStatus","userAddress","appState","count","explorerState","loading","events","group","address","request","totalCount","currentPageIndex","pageSize","searchText","showType","initialState","global","app","explorer","globalActions","prevState","payload","objectSpread","globalReducer","handleActions","appReducer","COUNTING","console","log","explorerActions","pageIndex","explorerReducer","combinedReducers","combineReducers","store","createStore","applyMiddleware","thunk","promise","ReduxDemo","countClick","countRerender","getState","subscribe","dispatch","onClick","HomePage","handleClick","e","target","Promise","rs","refs","refDemoEl","src","logo","alt","href","rel","cssModule","blue","flex","ref","join","process","EchartDemo","timeTicket","now","Date","oneDay","getInitialState","i","push","randomData","option","title","tooltip","trigger","formatter","params","date","name","getDate","getMonth","getFullYear","value","axisPointer","animation","xAxis","splitLine","show","yAxis","boundaryGap","series","showSymbol","hoverAnimation","getData","clearInterval","setInterval","deepClone","shift","Math","random","toString","round","echarts_for_react_lib_default","RouterDemo","react_router","path","component","NotFound404","css","page_404","PageTitle","SubTitle","SearchInput","currentText","searching","onSearch","handleSearch","handleKeyPress","ev","charCode","auto_complete","size","style","width","placeholder","backfill","input","suffix","es_button","marginRight","icon","fontSize","onKeyPress","withRouter","Paragraph","Typography","TxHashRender","copyable","MoreInfoRender","record","eventLog","LogUrlRender","LogRequestUserRandomRender","LogNonSupportedTypeRender","LogNonContractCallRender","LogCallbackTriggeredForRender","LogUpdateRandomRender","LogValidationResultRender","LogInsufficientPendingNodeRender","LogInsufficientWorkingGroupRender","LogGroupingRender","LogPublicKeyAcceptedRender","LogPublicKeySuggestedRender","LogGroupDissolveRender","LogRegisteredNewPendingNodeRender","LogGroupingInitiatedRender","LogNoPendingGroupRender","LogPendingGroupRemovedRender","LogErrorRender","UpdateGroupToPickRender","UpdateGroupSizeRender","UpdateGroupingThresholdRender","UpdateGroupMaturityPeriodRender","UpdateBootstrapCommitDurationRender","UpdateBootstrapRevealDurationRender","UpdatebootstrapStartThresholdRender","UpdatePendingGroupMaxLifeRender","GuardianRewardRender","lastRandomness","dispatchedGroupId","numWorkingGroups","numPendingGroups","groupId","nodeId","map","node","key","requestId","lastSystemRandomness","userSeed","pendingNodePool","groupSize","groupingThreshold","guardian","pubKey","pubKeyCount","queryId","timeOut","dataSource","selector","randomness","invalidSelector","callAddr","callbackAddr","numPendingNodes","err","oldNum","newNum","oldSize","newSize","oldThreshold","newThreshold","oldPeriod","newPeriod","oldDuration","newDuration","oldLifeBlocks","newLifeBlocks","trafficType","trafficId","String","pass","signature","sign","Column","Table","EventsList","_ref","explorerSearch","Fragment","table","rowKey","txHash","ID","pagination","position","defaultCurrent","defaultPageSize","current","total","bordered","onChange","_ref2","dataIndex","render","GroupDetail","groupDetail","descriptions","column","Item","label","span","group_Paragraph","Id","acceptedBlknum","dissolvedBlknum","urlRequests","randomRequests","RequestDetail","requestDetail","request_Paragraph","submitter","submittedBlkNum","submittedTxHash","item","AddressDetail","addressDetail","addr","activeGroups","address_Paragraph","balance","registerState","expiredGroups","Search","_this$props$searchRes","searchResult","history","match","matchPath","location","pathname","exact","strict","id","components_SearchInput","events_EventsList","group_GroupDetail","request_RequestDetail","address_AddressDetail","React","globalLoading","addressChange","ExplorerSearchRequest","explorerSearchReceiveResponse","length","concat","ExplorerSearch","arguments","undefined","ExplorerSearching","connect","Explorer","searchContainer","contextTypes","router","PropTypes","object","web3","nodeColumnRender","index","link","avatar","numberFormatRender","numeral","format","myDelegationFormatRender","NodeList","search","dataList","nodelist","listCount","rowClassName","row","NodeList_Column","sorter","b","selfStaked","sortDirections","totalDelegated","t","rewardCut","totalRewards","uptime","myDelegation","myRewards","NodeDetail","getNodeDetail","nodeDetail","nodedetail","_this$state$nodeDetai","nodeAddress","nodeDescription","shape","dateFormatRender","dateformat","time","Activities","activities","activities_Column","window","ethereum","Web3","allowAccess","selectedAddress","enable","accountAddress","on","accounts","notification","open","description","color","currentProvider","alert","DOS_ABI","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","DOS_CONTRACT_ADDRESS","Account","ToggleNumber","showNumber","numberToggler","spin","loadUserBalance","eth","getAccounts","userContract","methods","balanceOf","showBalance","utils","fromWei","userBalance","initContract","asyncToGenerator","regenerator_default","mark","_callee","contractInstance","network","result","wrap","_context","prev","next","Contract","net","getId","sent","t0","abrupt","netWork","stop","_this$state","myAccount_DescLabel","marginLeft","cursor","DescLabel","_ref2$market","market","MyAccount","myAccountContainer","activities_Activities","links","subLinks","url","Footer","renderLinks","renderSubLinks","sublink","PureComponent","Layout","children","Footer_Footer","App","Layout_Layout","Navigation_Navigation","Boolean","hostname","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","red","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4d02c4bc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './style.scss'\nexport default class Navigation extends Component {\n    render() {\n        return (\n            <div className=\"header__wrapper\">\n                <div className=\"header__container layout__container\">\n                    <div className=\"logo__wrapper\">\n                        <span className=\"logo--img\"></span>\n                        <span className=\"logo--name\">DOS NextWork</span>\n                    </div>\n                    <div className=\"navi__wrapper\">\n                        <div className=\"navi__container\">\n                            <NavLink className=\"navi-item\" to={`/nodelist`} activeClassName=\"active\">Node List</NavLink>\n                            <NavLink className=\"navi-item\" to={`/myaccount`} activeClassName=\"active\">History</NavLink>\n                            <NavLink className=\"navi-item\" to={`/explorer`} activeClassName=\"active\">Explorer</NavLink>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios'\nclass AjaxDemo extends Component {\n    constructor(props) {\n        super(props)\n        this.getDatafromAjax = this.getDatafromAjax.bind(this)\n        this.state = {\n            text: '',\n            code: 0,\n            message: ''\n        }\n    }\n    getDatafromAjax() {\n        axios.get('/api/demo/getdata').then(data => {\n            // 鬼...结构\n            let response = data.data\n            let body = response.body\n            let code = response.code\n            let message = response.message\n            this.setState({\n                text: body.text,\n                code: code,\n                message: message\n            })\n        })\n    }\n    componentDidMount() {\n        this.getDatafromAjax()\n    }\n    render() {\n        return (\n            <div className=\"ajax-demo--wrapper\">response from Ajax: /api/demo/getdata\n            <p>text:{this.state.text}</p>\n                <p>code:{this.state.code}</p>\n                <p>message:{this.state.message}</p></div>\n        )\n    }\n}\n\nexport default AjaxDemo\n","\nexport default {\n    METAMASK_ADDRESS_CHANGE: 'METAMASK_ADDRESS_CHANGE',\n    EXPLORER_SEARCH_RESPONSE: 'EXPLORER_SEARCH_RESPONSE',\n    EXPLORER_SEARCH_REQUEST: 'EXPLORER_SEARCH_REQUEST'\n}\n","import {\n    combineReducers\n} from 'redux';\n\nimport {\n    handleActions\n} from 'redux-actions'\nimport type from './type'\n\n// ===States \n// =====global state\nconst globalState = {\n    loadingStatus: false,\n    userAddress: ''\n}\n// =====app state\nconst appState = {\n    count: 0\n}\n\n// ===== explorer state\nconst explorerState = {\n    loading: false,\n    events: [],\n    group: [],\n    address: [],\n    request: [],\n    totalCount: 0,\n    currentPageIndex: 0,\n    pageSize: 20,\n    searchText: '',\n    showType: 'EVENT'\n}\nexport const initialState = {\n    global: globalState,\n    app: appState,\n    explorer: explorerState\n}\n\n// ===Reducers\n// =====globalReducer\nconst globalActions = {}\nglobalActions['LOADING_STATUS'] = (prevState, payload) => {\n    // console.log(`[reducer]LOADING_STATUS.............`)\n    // console.log(prevState, payload)\n    return {\n        ...globalState,\n        loadingStatus: payload.loading\n    }\n}\nglobalActions[type.METAMASK_ADDRESS_CHANGE] = (prevState, payload) => {\n    // console.log(`[reducer]${type.METAMASK_ADDRESS_CHANGE}.............`)\n    // console.log(prevState, payload)\n    return {\n        ...globalState,\n        userAddress: payload.address\n    }\n}\nconst globalReducer = handleActions(globalActions, globalState)\n\n\n// =====appReducer\nconst appReducer = handleActions({\n    'COUNTING'(prevState, payload) {\n        console.log(`[reducer]COUNTING.............`)\n        return {\n            ...appState,\n            count: prevState.count + 1\n        }\n    }\n}, appState)\n\n\nconst explorerActions = {}\nexplorerActions[type.EXPLORER_SEARCH_RESPONSE] = (prevState, payload) => {\n    let events = payload.response.events;\n    let request = payload.response.request;\n    let group = payload.response.group;\n    let address = payload.response.address;\n    return {\n        ...prevState,\n        loading: false,\n        events: events,\n        request: request,\n        group: group,\n        address: address,\n        totalCount: payload.response.totalCount\n    }\n}\n\nexplorerActions[type.EXPLORER_SEARCH_REQUEST] = (prevState, payload) => {\n    return {\n        ...prevState,\n        loading: true,\n        currentPageIndex: payload.pageIndex,\n        pageSize: payload.pageSize,\n        searchText: payload.searchText\n    }\n}\nconst explorerReducer = handleActions(explorerActions, explorerState)\n\n/**\n *  最后产生的reducer和 state的属性要保持一致\n * \n * reducer:{\n *  a,\n *  b\n * }\n * \n * state:{\n *  a,\n *  b\n * }\n */\nconst combinedReducers = combineReducers({\n    global: globalReducer,\n    app: appReducer,\n    explorer: explorerReducer\n})\n\n\n\nexport default combinedReducers\n","import {\n    createStore,\n    applyMiddleware\n} from 'redux';\nimport combinedReducers, {\n    initialState\n} from './reducer';\n\nimport promise from 'redux-promise';\nimport thunk from 'redux-thunk';\n\n// eslint-ignore\nfunction middlewareLogger(store) {\n    return next => action => {\n        console.log('[logger]will dispatch', action)\n\n        // Call the next dispatch method in the middleware chain.\n        const returnValue = next(action)\n\n        console.log('[logger]state after dispatch', store.getState())\n\n        // This will likely be the action itself, unless\n        // a middleware further in chain changed it.\n        return returnValue\n    }\n}\n\n\nconst store = createStore(combinedReducers, initialState, applyMiddleware(thunk, promise),\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport store from '../../redux/store'\nclass ReduxDemo extends Component {\n    constructor(props) {\n        super(props)\n        this.countClick = this.countClick.bind(this)\n        this.countRerender = this.countRerender.bind(this)\n        this.state = (store.getState())\n        store.subscribe(this.countRerender)\n    }\n    componentDidMount() {\n        store.dispatch({ type: 'LOADING_STATUS', loading: true })\n    }\n    componentWillUnmount() {\n        console.log(store)\n    }\n    countClick() {\n        store.dispatch({ type: 'COUNTING' })\n    }\n    countRerender() {\n        console.log(`store.subscribe function called`)\n        let state = store.getState()\n        console.log(state)\n        this.setState(state)\n    }\n    render() {\n        return (\n            <div>\n                <p>Redux Demo</p>\n                <p>Count:{this.state.app.count}</p>\n                <button onClick={this.countClick}>+1</button>\n            </div>\n        )\n    }\n}\n\nexport default ReduxDemo\n","import React, { Component } from 'react'\nimport cssModule from '../../test.module.css'\nimport logo from './logo.svg';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n    }\n    handleClick(e) {\n        let target = e.target\n        console.log(`first event loop`, e, `the target `, target)\n\n        let p = new Promise(function (rs) {\n            rs('a')\n        })\n        p.then(() => {\n            // 合成事件只对当前event loop 有效\n            console.log(`next event loop`, e, `the target from first loop `, target)\n        })\n        console.log(`find Dom El by refs= `, this.refs.refDemoEl)\n    }\n    render() {\n        return (\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>Edit <code>src/App.js</code> and save to reload.</p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >Learn React</a>\n                <span className={cssModule.blue}>this is color-blue css module</span>\n                <div className={cssModule.flex}>\n                    <p>this is flex layout,</p>\n                    <p>flex!!!!</p>\n                </div>\n                <div ref='refDemoEl' onClick={this.handleClick} className={[cssModule.flex, cssModule.blue].join(' ')}>{process.env.REACT_APP_ENV_VAR_A}</div>\n            </header>\n\n        )\n    }\n}\n\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport EchartReact from 'echarts-for-react'\nimport deepClone from 'lodash.clonedeep'\nclass EchartDemo extends Component {\n    constructor(props) {\n        super(props)\n        this.randomData = this.randomData.bind(this)\n        this.getData = this.getData.bind(this)\n        this.state = this.getInitialState()\n    }\n    timeTicket = null;\n\n    now = +new Date(1997, 9, 3);\n    oneDay = 24 * 3600 * 1000;\n    getInitialState = () => {\n        var data = [];\n        for (var i = 0; i < 1000; i++) {\n            data.push(this.randomData());\n        }\n        return {\n            option: {\n                title: {\n                    text: '动态数据 + 时间坐标轴'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    formatter: function (params) {\n                        params = params[0];\n                        var date = new Date(params.name);\n                        return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n                    },\n                    axisPointer: {\n                        animation: false\n                    }\n                },\n                xAxis: {\n                    type: 'time',\n                    splitLine: {\n                        show: false\n                    }\n                },\n                yAxis: {\n                    type: 'value',\n                    boundaryGap: [0, '100%'],\n                    splitLine: {\n                        show: false\n                    }\n                },\n                series: [{\n                    name: '模拟数据',\n                    type: 'line',\n                    showSymbol: false,\n                    hoverAnimation: false,\n                    data: data\n                }]\n            }\n        }\n    }\n    componentDidMount() {\n        if (this.timeTicket) {\n            clearInterval(this.timeTicket);\n        }\n        this.timeTicket = setInterval(this.getData, 1000);\n    }\n    componentWillUnmount() {\n        clearInterval(this.timeTicket);\n        this.timeTicket = null\n    }\n    getData() {\n        let option = deepClone(this.state.option)\n        for (var i = 0; i < 5; i++) {\n            option.series[0].data.shift();\n            option.series[0].data.push(this.randomData());\n        }\n        this.setState({ option })\n    }\n    randomData() {\n        let value = Math.random() * 1000;\n        this.now = new Date(+this.now + this.oneDay);\n        let now = this.now;\n        value = value + Math.random() * 21 - 10;\n        return {\n            name: now.toString(),\n            value: [\n                [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'),\n                Math.round(value)\n            ]\n        }\n    }\n    render() {\n        return (\n            <div>\n                <p>Echart Demo</p>\n                <EchartReact ref='echarts_react'\n                    option={this.state.option} />\n            </div>\n        )\n    }\n}\n\nexport default EchartDemo\n","import React, { Component } from 'react'\nimport { Route } from \"react-router-dom\";\nimport EchartDemo from '../EchartDemo'\nclass RouterDemo extends Component {\n    render() {\n        return (\n            <div>\n                <h1>this is nested router</h1>\n                <div>\n                    <Route path=\"/router/chart\" component={EchartDemo} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RouterDemo\n","import React, { Component } from 'react'\nimport css from './style.module.scss'\nexport default class NotFound404 extends Component {\n    render() {\n        console.log(css)\n        return (\n            <div>\n                <div className={css.page_404}>\n                    Ops! Page Not Found\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport function PageTitle(props) {\n    return <div className=\"page-title\">\n        {props.title}\n    </div>\n}\n\nexport function SubTitle(props) {\n    return <div className=\"page-sub-title\">\n        {props.title}\n    </div>\n}\n","import React, { Component } from 'react'\nimport { Icon, Button, Input, AutoComplete } from 'antd';\nimport './style.scss';\nimport { withRouter } from \"react-router\";\nclass SearchInput extends Component {\n    state = {\n        currentText: ''\n    }\n    // componentDidMount() {\n    //     this.props.onSearch(this.state.currentText)\n    // }\n    searching = () => {\n        this.props.onSearch(this.state.currentText)\n    }\n    handleSearch = value => {\n        this.setState({\n            // dataSource: dataSource.filter(txt => (txt.indexOf(value) > -1)),\n            currentText: value\n        })\n    }\n    handleKeyPress = ev => {\n        let key = ev.charCode;\n        if (key === 13) {\n            this.searching()\n        }\n    }\n    render() {\n        // const { dataSource } = this.state\n        // const options = dataSource\n        //     .map(txt => (\n        //         <Option key={txt} value={txt}>\n        //             {txt}\n        //         </Option>\n        //     ))\n        return (\n            <div className=\"search-input--wrapper\">\n                <AutoComplete\n                    className=\"search-input\"\n                    size=\"large\"\n                    style={{ width: '100%' }}\n                    // dataSource={options}\n                    onSearch={this.handleSearch}\n                    placeholder=\"Search by Event, RequestId, GroupId and Address\"\n                    backfill={true}\n                >\n                    <Input\n                        suffix={\n                            <Button\n                                className=\"search-btn\"\n                                style={{ marginRight: -12 }}\n                                size=\"large\"\n                                type=\"primary\"\n                                onClick={this.searching}\n                            >\n                                <Icon style={{ fontSize: 27 }} type=\"search\" />Search\n                            </Button>\n                        }\n                        onKeyPress={this.handleKeyPress}\n                    />\n                </AutoComplete>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(SearchInput);\n","import React from 'react';\nimport { Icon, Typography } from 'antd'\n// import Message from '../../util/message'\nconst { Paragraph } = Typography;\nexport const TxHashRender = (text) => {\n    return <span className=\"txhash--wrapper\">\n        <Paragraph copyable={{ text: text }}>\n            <span className=\"txhash--text text--ellipsis\">{text}</span>\n        </Paragraph>\n        {/* <CopyToClipboard text={text} onCopy={() => {\n            Message.Notification.Normal({ key: 'COPY_MESSAGE', message: 'copy success!' })\n        }}>\n            <Icon style={{ fontSize: 15, color: '#455ec7' }} type=\"copy\" />\n        </CopyToClipboard> */}\n    </span>\n}\nexport const MoreInfoRender = (text, record) => {\n    switch (record.eventLog) {\n        case 'LogUrl':\n            return LogUrlRender(record)\n        case 'LogRequestUserRandom':\n            return LogRequestUserRandomRender(record)\n        case 'LogNonSupportedType':\n            return LogNonSupportedTypeRender(record)\n        case 'LogNonContractCall':\n            return LogNonContractCallRender(record)\n        case 'LogCallbackTriggeredFor':\n            return LogCallbackTriggeredForRender(record)\n        case 'LogUpdateRandom':\n            return LogUpdateRandomRender(record)\n        case 'LogValidationResult':\n            return LogValidationResultRender(record)\n        case 'LogInsufficientPendingNode':\n            return LogInsufficientPendingNodeRender(record)\n        case 'LogInsufficientWorkingGroup':\n            return LogInsufficientWorkingGroupRender(record)\n        case 'LogGrouping':\n            return LogGroupingRender(record)\n        case 'LogPublicKeyAccepted':\n            return LogPublicKeyAcceptedRender(record)\n        case 'LogPublicKeySuggested':\n            return LogPublicKeySuggestedRender(record)\n        case 'LogGroupDissolve':\n            return LogGroupDissolveRender(record)\n        case 'LogRegisteredNewPendingNode':\n            return LogRegisteredNewPendingNodeRender(record)\n        case 'LogGroupingInitiated':\n            return LogGroupingInitiatedRender(record)\n        case 'LogNoPendingGroup':\n            return LogNoPendingGroupRender(record)\n        case 'LogPendingGroupRemoved':\n            return LogPendingGroupRemovedRender(record)\n        case 'LogError':\n            return LogErrorRender(record)\n        case 'UpdateGroupToPick':\n            return UpdateGroupToPickRender(record)\n        case 'UpdateGroupSize':\n            return UpdateGroupSizeRender(record)\n        case 'UpdateGroupingThreshold':\n            return UpdateGroupingThresholdRender(record)\n        case 'UpdateGroupMaturityPeriod':\n            return UpdateGroupMaturityPeriodRender(record)\n        case 'UpdateBootstrapCommitDuration':\n            return UpdateBootstrapCommitDurationRender(record)\n        case 'UpdateBootstrapRevealDuration':\n            return UpdateBootstrapRevealDurationRender(record)\n        case 'UpdatebootstrapStartThreshold':\n            return UpdatebootstrapStartThresholdRender(record)\n        case 'UpdatePendingGroupMaxLife':\n            return UpdatePendingGroupMaxLifeRender(record)\n        case 'GuardianReward':\n            return GuardianRewardRender(record)\n        default:\n            return { text }\n    }\n}\n\nconst LogUpdateRandomRender = (record) => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Last Randomness</span>\n            <span className=\"column-text\">{record.lastRandomness}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Dispatched GroupId</span>\n            <span className=\"column-text\">{record.dispatchedGroupId}</span>\n        </div>\n    </div>\n}\nconst LogInsufficientWorkingGroupRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Working Groups</span>\n            <span className=\"column-text  text-number\">{record.numWorkingGroups}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Pending Groups</span>\n            <span className=\"column-text  text-number\">{record.numPendingGroups}</span>\n        </div>\n    </div>\n}\nconst LogGroupingRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.groupId}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Nodes</span>\n            <span className=\"column-text\">\n                {\n                    record.nodeId.map(node => {\n                        return <p key={node} className=\"nodes-item\"><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {node}</p>\n                    })\n                }\n            </span>\n        </div>\n    </div>\n}\n\nconst LogRequestUserRandomRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">RequestId</span>\n            <span className=\"column-text\">\n                <span className=\"text--ellipsis ellipsis--mid\">\n                    {record.requestId}\n                </span>\n            </span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Last System Randomness</span>\n            <span className=\"column-text\">\n                <span className=\"text--ellipsis ellipsis--mid\">                             {record.lastSystemRandomness}\n                </span>\n            </span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">User Seed</span>\n            <span className=\"column-text\">{record.userSeed}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Dispatched GroupId</span>\n            <span className=\"column-text \">{record.dispatchedGroupId}</span>\n        </div>\n    </div>\n}\nconst LogGroupingInitiatedRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Pending Node Pool</span>\n            <span className=\"column-text  text-number\">{record.pendingNodePool}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Group Size</span>\n            <span className=\"column-text  text-number\">{record.groupSize}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Grouping Threshold</span>\n            <span className=\"column-text  text-number\">{record.groupingThreshold}</span>\n        </div>\n    </div>\n}\nconst GuardianRewardRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Guardian</span>\n            <span className=\"column-text\">{record.guardian}</span>\n        </div>\n    </div>\n}\n\nconst LogPublicKeyAcceptedRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.groupId}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Working Groups</span>\n            <span className=\"column-text  text-number\">{record.numWorkingGroups}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">PubKeys</span>\n            <span className=\"column-text\">\n                {\n                    record.pubKey.map(key => {\n                        return <p key={key} ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {key}</p>\n                    })\n                }\n            </span>\n        </div>\n    </div>\n}\n\nconst LogPublicKeySuggestedRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.groupId}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">PubKey Count</span>\n            <span className=\"column-text  text-number\">{record.pubKeyCount}</span>\n        </div>\n    </div>\n}\n\nconst LogUrlRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.dispatchedGroupId}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">QueryId</span>\n            <span className=\"column-text \">{record.queryId}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Timeout</span>\n            <span className=\"column-text \">{record.timeOut}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">DataSource</span>\n            <span className=\"column-text \">{record.dataSource}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Selector</span>\n            <span className=\"column-text \">{record.selector}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Randomness</span>\n            <span className=\"column-text \">{record.randomness}</span>\n        </div>\n    </div>\n}\n\nconst LogGroupDissolveRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.groupId}</span>\n        </div>\n    </div>\n}\n\nconst LogNonSupportedTypeRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">InvalidSelector</span>\n            <span className=\"column-text \">{record.invalidSelector}</span>\n        </div>\n    </div>\n}\n\nconst LogNonContractCallRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">CallAddr</span>\n            <p key={record.callAddr} className=\"nodes-item\"><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {record.callAddr}</p>\n        </div>\n    </div>\n}\n\nconst LogCallbackTriggeredForRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">CallbackAddr</span>\n            <p key={record.callbackAddr} className=\"nodes-item\"><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {record.callbackAddr}</p>\n        </div>\n    </div>\n}\n\nconst LogInsufficientPendingNodeRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Number Of Pending Nodes</span>\n            <span className=\"column-text \">{record.numPendingNodes}</span>\n        </div>\n    </div>\n}\n\nconst LogRegisteredNewPendingNodeRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Node</span>\n            <span className=\"column-text \">{record.node}</span>\n        </div>\n    </div>\n}\n\nconst LogPendingGroupRemovedRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.groupId}</span>\n        </div>\n    </div>\n}\n\nconst LogNoPendingGroupRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">GroupId</span>\n            <span className=\"column-text \">{record.groupId}</span>\n        </div>\n    </div>\n}\n\nconst LogErrorRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Error Message</span>\n            <span className=\"column-text \">{record.err}</span>\n        </div>\n    </div>\n}\n\nconst UpdateGroupToPickRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Number</span>\n            <span className=\"column-text \">{record.oldNum}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Number</span>\n            <span className=\"column-text \">{record.newNum}</span>\n        </div>\n    </div>\n}\n\nconst UpdateGroupSizeRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Size</span>\n            <span className=\"column-text \">{record.oldSize}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Size</span>\n            <span className=\"column-text \">{record.newSize}</span>\n        </div>\n    </div>\n}\n\nconst UpdateGroupingThresholdRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Threshold</span>\n            <span className=\"column-text \">{record.oldThreshold}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Threshold</span>\n            <span className=\"column-text \">{record.newThreshold}</span>\n        </div>\n    </div>\n}\n\nconst UpdateGroupMaturityPeriodRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Period</span>\n            <span className=\"column-text \">{record.oldPeriod}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Period</span>\n            <span className=\"column-text \">{record.newPeriod}</span>\n        </div>\n    </div>\n}\n\nconst UpdateBootstrapCommitDurationRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Duration</span>\n            <span className=\"column-text \">{record.oldDuration}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Duration</span>\n            <span className=\"column-text \">{record.newDuration}</span>\n        </div>\n    </div>\n}\n\nconst UpdateBootstrapRevealDurationRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Duration</span>\n            <span className=\"column-text \">{record.oldDuration}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Duration</span>\n            <span className=\"column-text \">{record.newDuration}</span>\n        </div>\n    </div>\n}\n\nconst UpdatebootstrapStartThresholdRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old Threshold</span>\n            <span className=\"column-text \">{record.oldThreshold}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New Threshold</span>\n            <span className=\"column-text \">{record.newThreshold}</span>\n        </div>\n    </div>\n}\n\nconst UpdatePendingGroupMaxLifeRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Old LifeBlocks</span>\n            <span className=\"column-text \">{record.oldLifeBlocks}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">New LifeBlocks</span>\n            <span className=\"column-text \">{record.newLifeBlocks}</span>\n        </div>\n    </div>\n}\n\nconst LogValidationResultRender = record => {\n    return <div className='custom-column--wrapper'>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Traffic Type</span>\n            <span className=\"column-text \">{record.trafficType}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Traffic ID</span>\n            <span className=\"column-text \">{record.trafficId}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Message</span>\n            <span className=\"column-text \">{record.message}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Pass</span>\n            <span className=\"column-text \">{String(record.pass)}</span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">Signature</span>\n            <span className=\"column-text\">\n                {\n                    record.signature.map(sign => {\n                        return <p key={sign} ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {sign}</p>\n                    })\n                }\n            </span>\n        </div>\n        <div className=\"custom-column\">\n            <span className=\"column-title\">PubKeys</span>\n            <span className=\"column-text\">\n                {\n                    record.pubKey.map(key => {\n                        return <p key={key} ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {key}</p>\n                    })\n                }\n            </span>\n        </div>\n    </div>\n}\n","import React from 'react'\nimport { Table } from 'antd'\nimport { MoreInfoRender, TxHashRender } from './tableRender.jsx'\nconst { Column } = Table\nexport const EventsList = ({ pageSize, currentPageIndex, totalCount, events, loading, searchText, explorerSearch }) => {\n    function handlePaginationChange({ current, pageSize }) {\n        explorerSearch(searchText, pageSize, current - 1);\n    }\n    return (\n        <><span className=\"search-result--title\">Latest {pageSize} events</span>\n            <Table rowKey={record => record.txHash + record.eventLog + record.ID} loading={loading} dataSource={events} pagination={{ position: 'top', defaultCurrent: 1, defaultPageSize: 20, current: currentPageIndex + 1, total: totalCount }} size=\"middle\" bordered\n                onChange={handlePaginationChange}\n            >\n                <Column title=\"Tx Hash\" dataIndex=\"txHash\" key=\"txHash\" width={250} render={TxHashRender} />\n                <Column title=\"Blocks\" dataIndex=\"blockNumber\" key=\"blockNumber\" width={70} />\n                <Column title=\"Event Log\" dataIndex=\"eventLog\" key=\"eventLog\" width={250} />\n                <Column title=\"More Info\" key=\"method\" render={MoreInfoRender} />\n            </Table>\n        </>\n    )\n}\n","import React from 'react'\nimport { Descriptions, Icon, Typography } from 'antd'\nconst { Paragraph } = Typography;\nexport const GroupDetail = ({ group }) => {\n    let groupDetail = (group && group[0]) || {\n        groupId: 'NOT FOUND',\n        nodeId: [],\n        pubKey: []\n    }\n    return (\n        <Descriptions title=\"Group Info\" bordered column={3}>\n            <Descriptions.Item label=\"Group Id\" span={3}>\n                <Paragraph copyable={{ text: groupDetail.groupId }}>\n                    {groupDetail.groupId}\n                </Paragraph>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Group NodeIds\" span={3}>\n                {\n                    groupDetail.nodeId.map(Id => {\n                        return <p key={Id} className='nodes-item' ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {Id}</p>\n                    })\n                }\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Group Publick Key\" span={3}>\n                {\n                    groupDetail.pubKey.map(Id => {\n                        return <p key={Id} className='nodes-item' ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {Id}</p>\n                    })\n                }\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Accepted Block Number\">\n                {groupDetail.acceptedBlknum}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Disresolved Block Number\">\n                {groupDetail.dissolvedBlknum}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Url Requests\">\n                {groupDetail.urlRequests}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Random Requests\">\n                {groupDetail.randomRequests}\n            </Descriptions.Item>\n        </Descriptions>\n    )\n}\n","import React from 'react'\nimport { Descriptions, Icon, Typography } from 'antd'\nconst { Paragraph } = Typography;\nexport const RequestDetail = ({ request }) => {\n    let requestDetail = (request && request[0]) || {\n        requestId: 'NOT FOUND',\n        signature: [],\n        pubKey: []\n    }\n    return (\n        <Descriptions title=\"Request Info\" bordered column={3}>\n            <Descriptions.Item label=\"Request Id\" span={3}>\n                <Paragraph copyable={{ text: requestDetail.requestId }}>\n                    {requestDetail.requestId}\n                </Paragraph>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Dispatched Group Id\" span={3}>\n                {requestDetail.dispatchedGroupId}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Submitter\" span={2}>\n                {requestDetail.submitter}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Submitted Block Number\">\n                {requestDetail.submittedBlkNum}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Submitted TxHash\" span={3}>\n                {requestDetail.submittedTxHash}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Message\" span={3}>\n                {requestDetail.message}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Signature\" span={3}>\n                {\n                    requestDetail.signature.map(item => {\n                        return <p key={item} className='nodes-item' ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {item}</p>\n                    })\n                }\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Publick Key\" span={3}>\n                {\n                    requestDetail.pubKey.map(Id => {\n                        return <p key={Id} className='nodes-item' ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {Id}</p>\n                    })\n                }\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Pass\">\n                {requestDetail.pass}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"TimeOut\">\n                {requestDetail.timeOut}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Selector\">\n                {requestDetail.selector}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Data Source\">\n                {requestDetail.dataSource}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Randomness\">\n                {requestDetail.randomness}\n            </Descriptions.Item>\n        </Descriptions>\n    )\n}\n","import React from 'react'\nimport { Descriptions, Icon, Typography } from 'antd'\nconst { Paragraph } = Typography;\nexport const AddressDetail = ({ address }) => {\n    let addressDetail = (address && address[0]) || {\n        addr: 'NOT FOUND',\n        activeGroups: []\n    }\n    return (\n        <Descriptions title=\"Address Info\" bordered column={3}>\n            <Descriptions.Item label=\"Address\" span={3}>\n                <Paragraph copyable={{ text: addressDetail.addr }}>\n                    {addressDetail.addr}\n                </Paragraph>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Balance\">\n                {addressDetail.balance}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Register State\">\n                {addressDetail.registerState}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"expiredGroups\">\n                {addressDetail.expiredGroups}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Active Groups\" span={3}>\n                {\n                    addressDetail.activeGroups.map(Id => {\n                        return <p key={Id} className='nodes-item' ><Icon style={{ fontSize: 13 }} type=\"tag\" /> - {Id}</p>\n                    })\n                }\n            </Descriptions.Item>\n\n        </Descriptions>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, matchPath } from \"react-router-dom\";\nimport SearchInput from '../../components/SearchInput'\nimport './style.scss';\nimport { EventsList } from './events'\nimport { GroupDetail } from './group'\nimport { RequestDetail } from './request'\nimport { AddressDetail } from './address'\nclass Search extends React.Component {\n    handleSearch = (text) => {\n        let { currentPageIndex, pageSize } = this.props.searchResult\n        this.props.explorerSearch(text, pageSize, currentPageIndex, this.props.history)\n    }\n    componentDidMount() {\n        let searchText = ''\n        let match = matchPath(this.props.location.pathname, {\n            path: \"/explorer/:type/:id\",\n            exact: true,\n            strict: false\n        })\n        if (match) {\n            let { id } = match.params;\n            searchText = id\n        }\n        this.handleSearch(searchText)\n    }\n    render() {\n        return (<>\n            <SearchInput onSearch={this.handleSearch}></SearchInput>\n            <Switch>\n                <Route exact path=\"/explorer/\" component={() => (\n                    <EventsList {...this.props.searchResult}></EventsList>\n                )} />\n                <Route exact path=\"/explorer/group/:groupId\" component={() => (\n                    <GroupDetail {...this.props.searchResult}></GroupDetail>\n                )} />\n                <Route exact path=\"/explorer/request/:requestId\" component={() => (\n                    <RequestDetail {...this.props.searchResult}></RequestDetail>\n                )} />\n\n                <Route exact path=\"/explorer/address/:requestId\" component={() => (\n                    <AddressDetail {...this.props.searchResult}></AddressDetail>\n                )} />\n            </Switch>\n        </>)\n    }\n}\nexport default Search;\n","import type from './type'\nimport axios from 'axios'\nexport function counting() {\n    return {\n        type: 'COUNTING'\n    }\n}\n\nexport function globalLoading(loadingStatus) {\n    return {\n        type: 'LOADING_STATUS',\n        loading: loadingStatus\n    }\n}\n\nexport function addressChange(address) {\n    return {\n        type: type.METAMASK_ADDRESS_CHANGE,\n        address: address\n    }\n}\n\n\nfunction explorerSearchReceiveResponse(data) {\n    return {\n        type: type.EXPLORER_SEARCH_RESPONSE,\n        response: data\n    }\n}\n\nfunction ExplorerSearching(searchText, pageSize, pageIndex) {\n    return {\n        type: type.EXPLORER_SEARCH_REQUEST,\n        searchText: searchText,\n        pageSize,\n        pageIndex\n    }\n}\n\nfunction ExplorerSearchRequest(searchText, pageSize, pageIndex, history) {\n    return (dispatch) => {\n        return axios.get('/api/explorer/search', {\n            params: {\n                text: searchText,\n                pageSize: pageSize,\n                pageIndex: pageIndex\n            }\n        }).then(response => {\n            let data = response.data.body\n            dispatch(explorerSearchReceiveResponse(data))\n            let {\n                request,\n                group,\n                address\n            } = data\n            if (request && request.length > 0) {\n                let id = request[0].requestId\n                history.push(`/explorer/request/${id}`)\n            } else if (group && group.length > 0) {\n                let id = group[0].groupId\n                history.push(`/explorer/group/${id}`)\n            } else if (address && address.length > 0) {\n                let id = address[0].addr\n                history.push(`/explorer/address/${id}`)\n            } else {\n                history.push(`/explorer`)\n            }\n        })\n    }\n}\nexport function ExplorerSearch(text = '', pageSize = 20, pageIndex = 0, history) {\n    return (dispatch) => {\n        dispatch(ExplorerSearching(text, pageSize, pageIndex))\n        return dispatch(ExplorerSearchRequest(text, pageSize, pageIndex, history))\n    }\n}\n\nexport default {\n    counting,\n    globalLoading,\n    addressChange\n}\n","import { connect } from 'react-redux'\nimport Search from './search'\nimport { ExplorerSearch } from '../../redux/action'\nimport { withRouter } from \"react-router\";\nconst mapStateToProps = (state) => ({ searchResult: state.explorer })\nconst mapDispatchToProps = dispatch => ({\n    explorerSearch: (text, pageSize, pageIndex, history) => dispatch(ExplorerSearch(text, pageSize, pageIndex, history))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search))\n","import React, { Component } from 'react'\nimport { PageTitle } from '../../Layout/page'\nimport './style.scss';\nimport Search from './searchContainer'\nimport PropTypes from 'prop-types';\nclass Explorer extends Component {\n    static contextTypes = {\n        router: PropTypes.object\n    }\n    render() {\n        return (\n            <div className=\"explorer-result--wrapper\">\n                <PageTitle title=\"Explorer\" />\n                <Search></Search>\n            </div>\n        )\n    }\n}\n\nexport default Explorer\n","import Web3 from 'web3'\nimport { addressChange } from '../redux/action'\nimport store from '../redux/store'\nimport type from '../redux/type'\nimport React from 'react'\nimport { notification, Icon } from 'antd'\nlet web3\nif (window.ethereum) {\n    web3 = new Web3(window.ethereum);\n    let allowAccess = !!window.ethereum.selectedAddress\n    try {\n        window.ethereum.enable().then(function (accountAddress) {\n            if (!allowAccess) {\n                addressChange(accountAddress)\n            }\n        });\n        window.ethereum.on('accountsChanged', function (accounts) {\n            store.dispatch({ type: type.METAMASK_ADDRESS_CHANGE, address: accounts[0] })\n            notification.open({\n                message: 'MetaMask Account Change',\n                description:\n                    <>\n                        <h3>Account change to</h3>\n                        <p>{accounts[0]}</p>\n                    </>,\n                icon: <Icon type=\"smile\" style={{ color: '#108ee9' }} />,\n            })\n        })\n    } catch (e) {\n        console.log(e)\n    }\n} else if (window.web3) {\n    web3 = new Web3(web3.currentProvider);\n} else {\n    alert('You have to install MetaMask !');\n}\nexport default web3;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Table } from 'antd'\nimport { PageTitle } from '../../Layout/page'\nimport axios from 'axios';\nimport './style.scss';\nimport numeral from 'numeral';\nconst { Column } = Table\nconst nodeColumnRender = (text, record, index) => {\n    let link = `/nodedetail/${record.node}`;\n    return <><img className=\"nodelist-avatar\" src={record.avatar} alt=\"avatar\" /><Link to={link}>{text}</Link></>\n}\nconst numberFormatRender = (text, record, index) => {\n    return numeral(text).format('0,0')\n}\nconst myDelegationFormatRender = (text, record, index) => {\n    if (text === 0) {\n        return '-'\n    } else {\n        return numberFormatRender(text)\n    }\n}\nexport default class NodeList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataList: [],\n            loading: false,\n            listCount: 100\n        }\n    }\n    componentDidMount() {\n        this.search();\n    }\n    search = () => {\n        this.setState({\n            loading: true\n        })\n        axios.get('/api/node/list').then(response => {\n            // 鬼...结构\n            let data = response.data.body\n            this.setState({\n                dataList: data.nodelist,\n                loading: false\n            })\n        })\n    }\n    render() {\n        return (\n            <div>\n                <PageTitle title=\"Node List\" />\n                <Table rowKey={record => record.node}\n                    loading={this.state.loading}\n                    dataSource={this.state.dataList}\n                    pagination={false}\n                    rowClassName={(row, index) => {\n                        return index % 2 === 0 ? 'row-light' : 'row-dark'\n                    }}>\n                    <Column title=\"Node\"\n                        render={nodeColumnRender}\n                        dataIndex=\"node\"\n                        key=\"node\" />\n                    <Column title=\"Self Staked\"\n                        render={numberFormatRender}\n                        dataIndex=\"selfStaked\"\n                        key=\"selfStaked\"\n                        sorter={(a, b) => a.selfStaked - b.selfStaked}\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"Total Delegated\"\n                        render={numberFormatRender}\n                        dataIndex=\"totalDelegated\"\n                        key=\"totalDelegated\"\n                        sorter={(a, b) => a.totalDelegated - b.totalDelegated}\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"Reward Cut\"\n                        render={(t) => `${t}%`}\n                        dataIndex=\"rewardCut\"\n                        key=\"rewardCut\"\n                        sorter={(a, b) => a.rewardCut - b.rewardCut}\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"Total Rewards\"\n                        render={numberFormatRender}\n                        dataIndex=\"totalRewards\"\n                        key=\"totalRewards\"\n                        sorter={(a, b) => a.totalRewards - b.totalRewards}\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"Uptime\"\n                        render={(t) => `${t} days`}\n                        dataIndex=\"uptime\"\n                        key=\"uptime\"\n                        sorter={(a, b) => a.uptime - b.uptime}\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"MyDelegation\"\n                        render={myDelegationFormatRender}\n                        dataIndex=\"myDelegation\"\n                        key=\"myDelegation\"\n                        sorter={(a, b) => a.myDelegation - b.myDelegation}\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"MyRewards\"\n                        render={myDelegationFormatRender}\n                        dataIndex=\"myRewards\"\n                        key=\"myRewards\"\n                        sorter={(a, b) => a.myRewards - b.myRewards}\n                        sortDirections={['ascend', 'descend']} />\n                </Table>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Button } from 'antd'\nimport { PageTitle } from '../../Layout/page'\nimport axios from 'axios';\nimport './style.scss'\nexport default class NodeDetail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            node: this.props.match.params.nodeId,\n            nodeDetail: {},\n            loading: false\n        }\n    }\n    componentDidMount() {\n        this.getNodeDetail()\n    }\n    getNodeDetail = () => {\n        this.setState({\n            loading: true\n        })\n        axios.get('/api/node/detail', { node: this.state.node }).then(response => {\n            // 鬼...结构\n            let data = response.data.body\n            this.setState({\n                nodeDetail: data.nodedetail,\n                loading: false\n            })\n        })\n    }\n    render() {\n        const { node, avatar, nodeAddress, nodeDescription, selfStaked, totalDelegated, rewardCut, totalRewards, uptime } = this.state.nodeDetail\n\n        return (\n            <div>\n                <PageTitle title='Node Detail'></PageTitle>\n                <div className=\"node-detail--info\">\n                    <div className=\"info-avatar--wrapper\">\n                        <img src={avatar} alt=\"\" />\n                    </div>\n                    <div className=\"info-summary--wrapper\">\n                        <p className=\"info-node\">{node}</p>\n                        <p className=\"info-opt\">\n                            <Button type=\"primary\" shape=\"round\" icon=\"solution\">\n                                Delegate\n                            </Button>\n                            <Button shape=\"round\" icon=\"export\">\n                                Unbond\n                            </Button>\n                        </p>\n                    </div>\n\n                </div>\n                <div className=\"node-detail--detail\">\n                    <div className=\"detail--user-info\">\n                        <div className=\"user-info--delegation\">\n                            <p className=\"user-info--title\">My Delegation</p>\n                            <p className=\"user-info--value\">{totalDelegated}</p>\n                        </div>\n                        <div className=\"user-info--rewards\">\n                            <p className=\"user-info--title\">My Rewards</p>\n                            <p className=\"user-info--value\">{totalRewards}</p>\n                            <Button className=\"widthdraw-button\" shape=\"round\" icon=\"dollar\">\n                                Withdraw Reward\n                            </Button>\n                        </div>\n                    </div>\n                    <div className=\"node-detail--item\">\n                        <div className=\"item--title\">Node Address</div>\n                        <div className=\"item--value\">{nodeAddress}</div>\n                    </div>\n                    <div className=\"node-detail--item\">\n                        <div className=\"item--title\">Node Description</div>\n                        <div className=\"item--value\">{nodeDescription}</div>\n                    </div>\n                    <div className=\"node-detail--item\">\n                        <div className=\"item--title\">Node Selt-Staked</div>\n                        <div className=\"item--value\">{selfStaked}</div>\n                    </div>\n                    <div className=\"node-detail--item\">\n                        <div className=\"item--title\">Total Delegated</div>\n                        <div className=\"item--value\">{totalDelegated}</div>\n                    </div>\n                    <div className=\"node-detail--item\">\n                        <div className=\"item--title\">Reward Cut</div>\n                        <div className=\"item--value\">{rewardCut}%</div>\n                    </div>\n                    <div className=\"node-detail--item\">\n                        <div className=\"item--title\">Uptime</div>\n                        <div className=\"item--value\">{uptime} days</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { SubTitle } from '../../Layout/page'\nimport { Table } from 'antd'\nimport dateformat from 'dateformat'\nimport axios from 'axios';\nconst { Column } = Table\nconst dateFormatRender = (text, record, index) => {\n    let value = dateformat(record.time, 'h:MM:ss TT yyyy/mm/dd')\n    return (<span>{value}</span>)\n}\nexport default class Activities extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataList: [],\n            loading: false,\n            listCount: 100\n        }\n    }\n    componentDidMount() {\n        this.search();\n    }\n    search = () => {\n        this.setState({\n            loading: true\n        })\n        axios.get('/api/account/activities').then(response => {\n            // 鬼...结构\n            let data = response.data.body\n            this.setState({\n                dataList: data.activities,\n                loading: false\n            })\n        })\n    }\n    render() {\n        return (\n            <>\n                <SubTitle title='Account Activity'></SubTitle>\n                <Table rowKey={record => record.txHash}\n                    loading={this.state.loading}\n                    dataSource={this.state.dataList}\n                    pagination={false}\n                    rowClassName={(row, index) => {\n                        return index % 2 === 0 ? 'row-light' : 'row-dark'\n                    }}>\n                    <Column title=\"Time\"\n                        render={dateFormatRender}\n                        sorter={(a, b) => +new Date(a.time) - +new Date(b.time)}\n                        sortDirections={['ascend', 'descend']}\n                        dataIndex=\"time\"\n                        key=\"time\" />\n                    <Column title=\"Action\"\n                        dataIndex=\"action\"\n                        key=\"action\"\n                        sortDirections={['ascend', 'descend']} />\n                    <Column title=\"Tx Hash\"\n                        dataIndex=\"txHash\"\n                        key=\"txHash\" />\n                </Table>\n\n            </>\n        )\n    }\n}\n","export const DOS_ABI = [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"stop\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"guy\", \"type\": \"address\" }, { \"name\": \"wad\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"owner_\", \"type\": \"address\" }], \"name\": \"setOwner\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"src\", \"type\": \"address\" }, { \"name\": \"dst\", \"type\": \"address\" }, { \"name\": \"wad\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"guy\", \"type\": \"address\" }, { \"name\": \"wad\", \"type\": \"uint256\" }], \"name\": \"mint\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"wad\", \"type\": \"uint256\" }], \"name\": \"burn\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"manager\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_token\", \"type\": \"address\" }, { \"name\": \"_dst\", \"type\": \"address\" }], \"name\": \"claimTokens\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"src\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"stopped\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"authority_\", \"type\": \"address\" }], \"name\": \"setAuthority\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"guy\", \"type\": \"address\" }, { \"name\": \"wad\", \"type\": \"uint256\" }], \"name\": \"burn\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_newManager\", \"type\": \"address\" }], \"name\": \"changeManager\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"dst\", \"type\": \"address\" }, { \"name\": \"wad\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"start\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"authority\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"guy\", \"type\": \"address\" }], \"name\": \"approve\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"src\", \"type\": \"address\" }, { \"name\": \"guy\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"authority\", \"type\": \"address\" }], \"name\": \"LogSetAuthority\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }], \"name\": \"LogSetOwner\", \"type\": \"event\" }, { \"anonymous\": true, \"inputs\": [{ \"indexed\": true, \"name\": \"sig\", \"type\": \"bytes4\" }, { \"indexed\": true, \"name\": \"guy\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"foo\", \"type\": \"bytes32\" }, { \"indexed\": true, \"name\": \"bar\", \"type\": \"bytes32\" }, { \"indexed\": false, \"name\": \"wad\", \"type\": \"uint256\" }, { \"indexed\": false, \"name\": \"fax\", \"type\": \"bytes\" }], \"name\": \"LogNote\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }]\nexport const DOS_CONTRACT_ADDRESS = \"0x214e79c85744CD2eBBc64dDc0047131496871bEe\"\n","import React, { Component } from 'react'\nimport { SubTitle } from '../../Layout/page'\nimport { Icon, Spin } from 'antd'\n\nimport web3 from '../../util/web3.js'\nimport { DOS_ABI, DOS_CONTRACT_ADDRESS } from '../../util/const'\nexport default class Account extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showNumber: true,\n            userContract: null,\n            netWork: ''\n        }\n    }\n    ToggleNumber = () => {\n        this.setState(function (state) {\n            return {\n                showNumber: !state.showNumber\n            }\n        })\n    }\n    numberToggler = (value) => {\n        return this.state.showNumber ? (value ? value : <Spin />) : '***';\n    }\n    componentDidMount() {\n        this.initContract()\n    }\n    loadUserBalance = () => {\n        this.props.globalLoading(true)\n        web3.eth.getAccounts().then((userAddress) => {\n            if (userAddress && userAddress.length > 0) {\n                this.state.userContract.methods.balanceOf(userAddress[0]).call().then((balance) => {\n                    let showBalance = web3.utils.fromWei(balance.toString('10'))\n                    this.setState({\n                        userBalance: showBalance\n                    })\n                })\n            }\n        })\n    }\n    initContract = async () => {\n        let contractInstance = new web3.eth.Contract(DOS_ABI, DOS_CONTRACT_ADDRESS);\n        let network = await web3.eth.net.getId()\n        let result\n        switch (network) {\n            case 1:\n                result = \"mainnet\";\n                break\n            case 2:\n                result = \"morden\";\n                break\n            case 3:\n                result = \"ropsten\";\n                break\n            case 4:\n                result = \"rinkeby\";\n                break\n            default:\n                result = \"unknown network = \" + network;\n        }\n        this.setState({ userContract: contractInstance, netWork: result })\n        this.loadUserBalance()\n    }\n    render() {\n        const { showNumber, userBalance } = this.state\n        return (\n            <>\n                <SubTitle title='My Account'></SubTitle>\n                <div className=\"myaccount--wrapper\">\n                    <div className=\"myaccount-balance\">\n                        <DescLabel label='Account Balance' /><Icon style={{ fontSize: 27, marginLeft: 30, cursor: 'pointer' }} type={showNumber ? 'eye' : 'eye-invisible'} onClick={this.ToggleNumber} />\n                        <div className=\"account-number big-size\">{this.numberToggler(userBalance)}</div>\n                    </div>\n                    <div className=\"myaccount-detail--wrapper\">\n                        <div className=\"detail--container\">\n                            <DescLabel label='Total Delegated' />\n                            <p className=\"account-number\">{this.numberToggler('8,999.91')}</p>\n                        </div>\n                        <div className=\"detail--container\">\n                            <DescLabel label='My Rewards' />\n                            <p className=\"account-number\">{this.numberToggler('18,999.91')}</p>\n                        </div>\n                        <div className=\"detail--container\">\n                            <DescLabel label='Unbonded tokens' />\n                            <p className=\"account-number\">{this.numberToggler('999')}</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst DescLabel = ({ label, market = 'DOS' }) => {\n    return (\n        <span className=\"desc-label\">{label}<span className=\"desc-market\">/{market}</span>\n        </span>\n    )\n}\n","import { connect } from 'react-redux'\nimport MyAccount from './myAccount'\nimport { globalLoading } from '../../redux/action'\n\nconst mapStateToProps = () => ({})\nconst mapDispatchToProps = dispatch => ({\n    globalLoading: loadingStatus => dispatch(globalLoading(loadingStatus))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccount)\n","import React, { Component } from 'react'\nimport { PageTitle } from '../../Layout/page'\nimport Activities from './activities'\nimport Account from './myAccountContainer'\nimport './style.scss'\nexport default class MyAccount extends Component {\n    render() {\n        return (\n            <div>\n                <PageTitle title='My Account'></PageTitle>\n                <Account></Account>\n                <Activities></Activities>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nconst links = [\n    {\n        title: 'Useful Link',\n        subLinks: [\n            {\n                text: 'How it works',\n                url: 'https://www.baidu.com'\n            }, {\n                text: 'Token sale details',\n                url: 'https://www.baidu.com'\n            }, {\n                text: 'Team',\n                url: '/nodelist'\n            }\n        ]\n    }, {\n        title: 'Documents',\n        subLinks: [\n            {\n                text: 'Privacy Policy',\n                url: 'https://www.baidu.com'\n            }, {\n                text: 'Terms of Use',\n                url: 'https://www.baidu.com'\n            }, {\n                text: 'Agreement',\n                url: '/nodelist'\n            }\n        ]\n    }\n]\n\nexport default class Footer extends PureComponent {\n    render() {\n        let renderLinks = links.map((link) => {\n            let renderSubLinks = link.subLinks.map((sublink) => {\n                return (\n                    <div className=\"link\" key={sublink.text}>{sublink.text}</div>\n                )\n            })\n            return (\n                <div className=\"link-group-item\" key={link.title}>\n                    <div className=\"link-group-title\">{link.title}</div>\n                    <div className=\"link-group-sub\">\n                        {renderSubLinks}\n                    </div>\n                </div>\n            )\n        })\n        return (\n            <div className=\"footer__wrapper\">\n                <div className=\"link-group\">\n                    {renderLinks}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent } from 'react'\nimport Footer from '../components/Footer'\nexport default class Layout extends PureComponent {\n    render() {\n        return (\n            <div id=\"main\">\n                <div className=\"header\">\n                    {this.props.children[0]}\n                </div>\n                <div className=\"main-body\">\n                    {this.props.children[1]}\n                </div>\n                <Footer></Footer>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navigation from './components/Navigation'\nimport AjaxDemo from './pages/AjaxDemo'\nimport ReduxDemo from './pages/ReduxDemo'\nimport HomePage from './pages/HomePage'\nimport EchartDemo from './pages/EchartDemo'\nimport RouterDemo from './pages/RouterDemo'\nimport NotFound404 from './pages/NotFound404'\nimport Explorer from './pages/Explorer'\nimport NodeList from './pages/NodeList'\nimport NodeDetail from './pages/NodeDetail'\nimport MyAccount from './pages/MyAccount'\nimport Layout from './Layout'\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Layout>\n          <Navigation>\n          </Navigation>\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route path=\"/ajax\" component={AjaxDemo} />\n            <Route path=\"/redux\" component={ReduxDemo} />\n            <Route path=\"/echart\" component={EchartDemo} />\n            <Route path='/router' component={RouterDemo} />\n            <Route path='/explorer' component={Explorer} />\n            <Route path='/nodelist' component={NodeList} />\n            <Route path='/nodedetail/:nodeId' component={NodeDetail} />\n            <Route path='/myaccount' component={MyAccount} />\n            <Route component={NotFound404} />\n          </Switch>\n        </Layout>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {\n    Provider\n} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"test_blue__32LrC\",\"red\":\"test_red__20iCt\",\"flex\":\"test_flex__3pH5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_404\":\"style_page_404__3SZW3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}